package com.cying.ideatools.gaps.toolwindow;

import com.cying.ideatools.gaps.model.FlowTable;
import com.intellij.openapi.project.Project;
import com.intellij.psi.PsiElement;
import com.intellij.ui.TreeSpeedSearch;
import com.intellij.ui.treeStructure.Tree;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.util.PsiNavigateUtil;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.awt.*;

/**
 * @author chengying13378 chengying13378@hundsun.com
 * @description TODO
 * @date 2019-11-14 11:03
 */
public class GapsToolWindowUI {
    private JScrollPane scrollPane;
    private JButton refresh;
    private JTree flowTree;
    public JPanel rootJpanel;

    private Project project;

    public GapsToolWindowUI(Project project) {
        this.project = project;
        refresh.addActionListener(e -> {
            FlowTable.INSTANCE.updateComptTableByScan(project);
            FlowTable.INSTANCE.updateFlowByScan(project);
            refreshFlowTree();
        });
        FlowTable.INSTANCE.updateComptTableByScan(project);
        FlowTable.INSTANCE.updateFlowByScan(project);
        refreshFlowTree();
        flowTree.addTreeSelectionListener(e -> {
            // 返回最后选定的节点
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) flowTree.getLastSelectedPathComponent();
            if (selectedNode.getUserObject() instanceof PsiElement) {
                PsiNavigateUtil.navigate((PsiElement) selectedNode.getUserObject());
            }
        });
        new TreeSpeedSearch(flowTree);
    }

    private void refreshFlowTree() {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("flow");
        FlowTable.INSTANCE.getFlowTable().forEach((key, value) -> {
            DefaultMutableTreeNode flowNode = new DefaultMutableTreeNode();
            flowNode.setUserObject(key);
//            flowNode.setParent(root);
            flowNode.setAllowsChildren(true);
            if (value != null) {
                for (int i = 0; i < value.getCompts().size(); i++) {
                    DefaultMutableTreeNode node = new DefaultMutableTreeNode(value.getCompts().get(i).component2(), true);
                    flowNode.add(node);
                }
                root.add(flowNode);
            }
        });
        DefaultTreeModel model = new DefaultTreeModel(root);
        flowTree.setModel(model);
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("GapsToolWindowUI");
        frame.setContentPane(new GapsToolWindowUI(null).rootJpanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        rootJpanel = panel1;
        panel1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        flowTree = new JTree();
        scrollPane1.setViewportView(flowTree);
        final JToolBar toolBar1 = new JToolBar();
        panel1.add(toolBar1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 20), null, 0, false));
        refresh = new JButton();
        refresh.setText("刷新");
        toolBar1.add(refresh);
    }

}
